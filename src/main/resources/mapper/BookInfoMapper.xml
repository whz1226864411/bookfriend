<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.creat.bookfriend.mapper.BookInfoMapper" >
  <resultMap id="BaseResultMap" type="com.creat.bookfriend.po.BookInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="isbn" property="isbn" jdbcType="BIGINT" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="book_brief_id" property="bookBriefId" jdbcType="BIGINT" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="cover_img" property="coverImg" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="tag_id" property="tagId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="user_info_id" property="userInfoId" jdbcType="BIGINT" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, book_name, isbn, author, book_brief_id, place, cover_img, category_id, tag_id, 
    state, user_info_id, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.creat.bookfriend.po.BookInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from book_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from book_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.creat.bookfriend.po.BookInfoExample" >
    delete from book_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.creat.bookfriend.po.BookInfo"
          useGeneratedKeys="true" keyProperty="id">
    insert into book_info (id, book_name, isbn, 
      author, book_brief_id, place, 
      cover_img, category_id, tag_id, 
      state, user_info_id, gmt_create, 
      gmt_modified)
    values (#{id,jdbcType=BIGINT}, #{bookName,jdbcType=VARCHAR}, #{isbn,jdbcType=BIGINT}, 
      #{author,jdbcType=VARCHAR}, #{bookBriefId,jdbcType=BIGINT}, #{place,jdbcType=VARCHAR}, 
      #{coverImg,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, #{tagId,jdbcType=INTEGER}, 
      #{state,jdbcType=TINYINT}, #{userInfoId,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.creat.bookfriend.po.BookInfo" >
    insert into book_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="isbn != null" >
        isbn,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="bookBriefId != null" >
        book_brief_id,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="coverImg != null" >
        cover_img,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="tagId != null" >
        tag_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="userInfoId != null" >
        user_info_id,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        #{isbn,jdbcType=BIGINT},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="bookBriefId != null" >
        #{bookBriefId,jdbcType=BIGINT},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="coverImg != null" >
        #{coverImg,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="tagId != null" >
        #{tagId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="userInfoId != null" >
        #{userInfoId,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.creat.bookfriend.po.BookInfoExample" resultType="java.lang.Integer" >
    select count(*) from book_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bookName != null" >
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.isbn != null" >
        isbn = #{record.isbn,jdbcType=BIGINT},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.bookBriefId != null" >
        book_brief_id = #{record.bookBriefId,jdbcType=BIGINT},
      </if>
      <if test="record.place != null" >
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.coverImg != null" >
        cover_img = #{record.coverImg,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null" >
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.tagId != null" >
        tag_id = #{record.tagId,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.userInfoId != null" >
        user_info_id = #{record.userInfoId,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null" >
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book_info
    set id = #{record.id,jdbcType=BIGINT},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      isbn = #{record.isbn,jdbcType=BIGINT},
      author = #{record.author,jdbcType=VARCHAR},
      book_brief_id = #{record.bookBriefId,jdbcType=BIGINT},
      place = #{record.place,jdbcType=VARCHAR},
      cover_img = #{record.coverImg,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      tag_id = #{record.tagId,jdbcType=INTEGER},
      state = #{record.state,jdbcType=TINYINT},
      user_info_id = #{record.userInfoId,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.creat.bookfriend.po.BookInfo" >
    update book_info
    <set >
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        isbn = #{isbn,jdbcType=BIGINT},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="bookBriefId != null" >
        book_brief_id = #{bookBriefId,jdbcType=BIGINT},
      </if>
      <if test="place != null" >
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="coverImg != null" >
        cover_img = #{coverImg,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="tagId != null" >
        tag_id = #{tagId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="userInfoId != null" >
        user_info_id = #{userInfoId,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.creat.bookfriend.po.BookInfo" >
    update book_info
    set book_name = #{bookName,jdbcType=VARCHAR},
      isbn = #{isbn,jdbcType=BIGINT},
      author = #{author,jdbcType=VARCHAR},
      book_brief_id = #{bookBriefId,jdbcType=BIGINT},
      place = #{place,jdbcType=VARCHAR},
      cover_img = #{coverImg,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      tag_id = #{tagId,jdbcType=INTEGER},
      state = #{state,jdbcType=TINYINT},
      user_info_id = #{userInfoId,jdbcType=BIGINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>